// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProyectoFinal.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20230403215434_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalGastado")
                        .HasColumnType("REAL");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DetallePagosTennis", b =>
                {
                    b.Property<int>("DetallesPagosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PagoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorPago")
                        .HasColumnType("REAL");

                    b.HasKey("DetallesPagosId");

                    b.HasIndex("PagoId");

                    b.ToTable("DetallePagosTennis");
                });

            modelBuilder.Entity("PagosTennis", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("TEXT");

                    b.Property<int>("TenniId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PagoId");

                    b.ToTable("PagosTennis");
                });

            modelBuilder.Entity("Tennis", b =>
                {
                    b.Property<int>("TenniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<int>("Existencia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<double>("Precio")
                        .HasColumnType("REAL");

                    b.HasKey("TenniId");

                    b.ToTable("Tennis");

                    b.HasData(
                        new
                        {
                            TenniId = 1,
                            Costo = 80.0,
                            Existencia = 50,
                            Marca = "Nike",
                            Precio = 100.0
                        },
                        new
                        {
                            TenniId = 2,
                            Costo = 50.0,
                            Existencia = 50,
                            Marca = "Adidas",
                            Precio = 80.0
                        },
                        new
                        {
                            TenniId = 3,
                            Costo = 150.0,
                            Existencia = 50,
                            Marca = "Jordan",
                            Precio = 200.0
                        });
                });

            modelBuilder.Entity("DetallePagosTennis", b =>
                {
                    b.HasOne("PagosTennis", null)
                        .WithMany("DetallePagosTennis")
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagosTennis", b =>
                {
                    b.Navigation("DetallePagosTennis");
                });
#pragma warning restore 612, 618
        }
    }
}
