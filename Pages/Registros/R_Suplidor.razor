@page "/suplidor"
@page "/suplidor/{SuplidorId:int}"

<PageTitle>Registro Suplidor</PageTitle>

@inject SuplidorBLL suplidorBLL
@inject NotificationService notificationService

<EditForm Model="suplidor" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="card">
        <div class="card-header">
            <h1> Registo de suplidor </h1>
        </div>

        <div class="card-body">
            @*SuplidorId*@
            <div class="form-group">
                <label>SuplidorId: </label><br>
                <InputNumber @bind-Value="suplidor.SuplidorId" class="form-control" /> <br>
                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"><i
                        class="oi oi-magnifying-glass" /> Buscar</button>
            </div>

            @*Marca*@
            <div class="form-group">
                <label>Marca: </label><br>
                <InputText @bind-Value="suplidor.Marca" class="form-control" /> <br>
            </div>

            @*PrecioVenta*@
            <div class="form-group">
                <label>Precio de la venta: </label><br>
                <InputNumber @bind-Value="suplidor.PrecioVenta" class="form-control" /> <br>
            </div>

            @*Email*@
            <div class="form-group">
                <label>Email: </label><br>
                <InputText @bind-Value="suplidor.Email" class="form-control" /> <br>
            </div>

            @*Telefono*@
            <div class="form-group">
                <label>Telefono: </label><br>
                <InputText @bind-Value="suplidor.Telefono" class="form-control" /> <br>
            </div>

            @*Direccion*@
            <div class="form-group">
                <label>Direccion: </label><br>
                <InputText @bind-Value="suplidor.Direccion" class="form-control" /> <br>
            </div>
        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file" /> Nuevo </button>
                <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-document" /> Guardar </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar </button>
            </div>
        </div>
    </div>
</EditForm>

@code{

    [Parameter]
    public int SuplidorId { get; set; }

    public Suplidor suplidor { get; set; } = new Suplidor();

    protected override void OnInitialized()
    {
        if (SuplidorId > 0)
        {
            this.suplidor.SuplidorId = SuplidorId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        suplidor = new Suplidor();
    }

    bool Validar()
    {
        if(!String.IsNullOrEmpty(suplidor.Marca)){
            return true;
        }

        return false;
    } 


    void Guardar()
    {
        if(!Validar()){return;}

        if(suplidorBLL.Guardar(this.suplidor))
        {
            ShowNotification(
                new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Se ha guardado con exito."
                }
            );
            this.Nuevo();
        }
    }

    private void Buscar()
    {
        if (suplidor.SuplidorId > 0)
        {
            var encontrado = suplidorBLL.Buscar(suplidor.SuplidorId);

            if (encontrado != null)
                this.suplidor = encontrado;
        }
    }

    public void Eliminar()
    {
        if(suplidorBLL.Eliminar(suplidor.SuplidorId)){
            ShowNotification(
                new NotificationMessage
                {
                    Severity = NotificationSeverity.Info,
                    Summary = "Se ha eliminado con exito."
                }
            );
            Nuevo();
        }
        else{
            ShowNotification(
                new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "No hay elemento para borrar."
                }
            );
            return;
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}


